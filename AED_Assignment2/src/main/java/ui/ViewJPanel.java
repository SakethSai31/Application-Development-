/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.function.ObjDoubleConsumer;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Vehicle;
import model.VehicleHistory;

/**
 *
 * @author Saketh
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    VehicleHistory carDetailsHistory;
    
    public ViewJPanel(VehicleHistory carDetailsHistory) {
        initComponents();
        this.carDetailsHistory = carDetailsHistory;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarDetails = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        noChecked = new javax.swing.JRadioButton();
        lblserialNum = new javax.swing.JLabel();
        yesChecked = new javax.swing.JRadioButton();
        lblCarAvailability2 = new javax.swing.JLabel();
        lblmfgName = new javax.swing.JLabel();
        lblmfgYear = new javax.swing.JLabel();
        lblmfgCompany = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        txtmfgCompany = new javax.swing.JTextField();
        txtmfgName = new javax.swing.JTextField();
        txtmfgYear = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        lblmainCert = new javax.swing.JLabel();
        txtserialNum = new javax.swing.JTextField();
        btnupdate = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        lblvidNum = new javax.swing.JLabel();
        txtmodelNum = new javax.swing.JTextField();
        lblmodelNum = new javax.swing.JLabel();
        txtvIDNum = new javax.swing.JTextField();
        txtmainCert = new javax.swing.JTextField();
        lblYearOfManufacturing1 = new javax.swing.JLabel();
        jComboNumSeats = new javax.swing.JComboBox<>();
        lblfirstAvailabilty = new javax.swing.JLabel();
        txtFleet = new javax.swing.JTextField();
        btnRfirstAvailavility = new javax.swing.JRadioButton();
        btnFleet = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setBorder(javax.swing.BorderFactory.createCompoundBorder());
        setPreferredSize(new java.awt.Dimension(1000, 1000));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Car Details");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 190));

        tblCarDetails.setBorder(new javax.swing.border.MatteBorder(null));
        tblCarDetails.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        tblCarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer Name", "Model Name", "Manufactured Year", "Model Number", "Serial Number", "Vehicle Number", "Location", "Maintaince Certificate", "Number of Seats", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCarDetails.setName("Vehicle Database"); // NOI18N
        tblCarDetails.setPreferredSize(new java.awt.Dimension(600, 200));
        tblCarDetails.setShowGrid(false);
        jScrollPane1.setViewportView(tblCarDetails);

        btnView.setFont(new java.awt.Font("Mongolian Baiti", 3, 12)); // NOI18N
        btnView.setText("VIEW");
        btnView.setBorder(new javax.swing.border.MatteBorder(null));
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Mongolian Baiti", 3, 12)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setBorder(new javax.swing.border.MatteBorder(null));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        noChecked.setText("No");
        noChecked.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, new java.awt.Color(204, 204, 255), java.awt.Color.black, new java.awt.Color(204, 204, 255)));
        noChecked.setPreferredSize(new java.awt.Dimension(50, 20));
        noChecked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noCheckedActionPerformed(evt);
            }
        });

        lblserialNum.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblserialNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblserialNum.setText("Serial Number :");

        yesChecked.setText("Yes");
        yesChecked.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, new java.awt.Color(204, 204, 255), java.awt.Color.black, new java.awt.Color(204, 204, 255)));
        yesChecked.setPreferredSize(new java.awt.Dimension(50, 20));

        lblCarAvailability2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblCarAvailability2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCarAvailability2.setText("Availability :");

        lblmfgName.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblmfgName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmfgName.setText("Model Name :");

        lblmfgYear.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblmfgYear.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmfgYear.setText("Manufactured Year:");

        lblmfgCompany.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblmfgCompany.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmfgCompany.setText("Manufacturer Company :");

        lblLocation.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblLocation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLocation.setText("Location :");

        txtmfgCompany.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.lightGray, null, null));
        txtmfgCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmfgCompanyActionPerformed(evt);
            }
        });

        txtmfgName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.gray, null, null));
        txtmfgName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmfgNameActionPerformed(evt);
            }
        });

        txtmfgYear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.gray, null, null));

        txtLocation.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.gray));

        lblmainCert.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblmainCert.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmainCert.setText("Maintance Certificate :");

        txtserialNum.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.gray, null, null));

        btnupdate.setFont(new java.awt.Font("Mongolian Baiti", 3, 12)); // NOI18N
        btnupdate.setText("UPDATE");
        btnupdate.setBorder(new javax.swing.border.MatteBorder(null));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnsearch.setFont(new java.awt.Font("Mongolian Baiti", 3, 12)); // NOI18N
        btnsearch.setText("SEARCH");
        btnsearch.setBorder(new javax.swing.border.MatteBorder(null));
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        lblvidNum.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblvidNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblvidNum.setText("Vehicle Number :");

        txtmodelNum.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.gray));

        lblmodelNum.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblmodelNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmodelNum.setText("Model Number :");

        txtvIDNum.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.gray));

        txtmainCert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.gray, java.awt.Color.black, java.awt.Color.gray));

        lblYearOfManufacturing1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblYearOfManufacturing1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblYearOfManufacturing1.setText("Number of Seats :");

        jComboNumSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "4", "6" }));
        jComboNumSeats.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.darkGray, java.awt.Color.black, java.awt.Color.lightGray));
        jComboNumSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboNumSeatsActionPerformed(evt);
            }
        });

        lblfirstAvailabilty.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        lblfirstAvailabilty.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblfirstAvailabilty.setText("First Availability :");

        txtFleet.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.gray, null, null));
        txtFleet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFleetActionPerformed(evt);
            }
        });

        btnRfirstAvailavility.setText("Yes");
        btnRfirstAvailavility.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, new java.awt.Color(204, 204, 255), java.awt.Color.black, new java.awt.Color(204, 204, 255)));
        btnRfirstAvailavility.setPreferredSize(new java.awt.Dimension(50, 20));

        btnFleet.setFont(new java.awt.Font("Mongolian Baiti", 3, 12)); // NOI18N
        btnFleet.setText("Last Updated");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnupdate)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblfirstAvailabilty, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblserialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtserialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRfirstAvailavility, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCarAvailability2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblmainCert)
                                    .addComponent(lblYearOfManufacturing1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFleet))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtmainCert, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(yesChecked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(noChecked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtFleet, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(jComboNumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblvidNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblmodelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtvIDNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmodelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblmfgYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblmfgName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblmfgCompany, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmfgYear, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmfgName, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmfgCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(379, 379, 379))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 993, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsearch))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnView, btnsearch, btnupdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnDelete)
                        .addGap(30, 30, 30)
                        .addComponent(btnupdate))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblmfgCompany)
                            .addComponent(txtmfgCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblmfgName)
                            .addComponent(txtmfgName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblmfgYear)
                            .addComponent(txtmfgYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocation)
                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblserialNum)
                            .addComponent(txtserialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnsearch)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblfirstAvailabilty)
                        .addComponent(btnRfirstAvailavility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtvIDNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtmodelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblmodelNum))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblvidNum)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmainCert)
                    .addComponent(txtmainCert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesChecked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noChecked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCarAvailability2))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYearOfManufacturing1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboNumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFleet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFleet))
                .addContainerGap(280, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnView, btnsearch, btnupdate});

    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
       int SelectedRowIndex = tblCarDetails.getSelectedRow();
       
       if(SelectedRowIndex  < 0) {
           JOptionPane.showMessageDialog(this, "Choose the row, which you want to remove");
           return;
       }
       
       DefaultTableModel model = (DefaultTableModel) tblCarDetails.getModel();
       Vehicle selectedVehicle = (Vehicle) model.getValueAt(SelectedRowIndex, 0);
        
       carDetailsHistory.deletecarDetails(selectedVehicle);
       
       JOptionPane.showMessageDialog(this, "Selected Information Succesfully Deleted");
       
       populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
       int SelectedRowIndex = tblCarDetails.getSelectedRow();
       
       if(SelectedRowIndex  < 0) {
           JOptionPane.showMessageDialog(this, "Please select a row!");
           return;
       }
       
       DefaultTableModel model = (DefaultTableModel) tblCarDetails.getModel();
       Vehicle selectedVehicle = (Vehicle) model.getValueAt(SelectedRowIndex, 0);
       
       txtmfgCompany.setText(selectedVehicle.getMfgCompany());
       txtmfgName.setText(selectedVehicle.getmfgName());
       txtmfgYear.setText(selectedVehicle.getYearOfManufacturing());
       txtLocation.setText(selectedVehicle.getLocation());
       txtserialNum.setText(selectedVehicle.getSerialNum());      
    }//GEN-LAST:event_btnViewActionPerformed
      
     
    private void noCheckedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noCheckedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noCheckedActionPerformed

    private void txtmfgCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmfgCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmfgCompanyActionPerformed

    private void txtmfgNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmfgNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmfgNameActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblCarDetails.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(this,"Kindly select a row to update");
            return;
            }
        
        DefaultTableModel model = (DefaultTableModel)tblCarDetails.getModel();
        Vehicle myCar = (Vehicle)model.getValueAt(selectedRow, 0);
         Vehicle cd = new Vehicle();
         cd.setMfgCompany(txtmfgCompany.getText());
         cd.setmfgName(txtmfgName.getText());
         cd.setYearOfManufacturing(txtmfgYear.getText());
         cd.setLocation(txtLocation.getText());
         cd.setSerialNum(txtserialNum.getText());
         
         carDetailsHistory.updatecarDetails(selectedRow, cd);
         populateTable();
        
    }//GEN-LAST:event_btnupdateActionPerformed
     private Object return_row(Vehicle carDetails){
         
         Object[] row = new Object[10];
            row[0]= carDetails.getMfgCompany();
            row[1]= carDetails.getmfgName();
            row[2]= carDetails.getYearOfManufacturing();
            row[6]= carDetails.getLocation();
            row[8]= carDetails.getNumSeats();
            row[9]= carDetails.getCarAvailability();
            row[0]= carDetails;
            row[4]= carDetails.getSerialNum();
            row[3]= carDetails.getModelNum();
            row[5]= carDetails.getvIDNum();
           // row[7]= carDetails.getmainCert();
           
            return row;
     }
     
    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCarDetails.getModel();
         model.setRowCount(0);
       String Manufacturer=txtmfgCompany.getText();
       System.out.println("Manufacturer" + Manufacturer);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getMfgCompany().equalsIgnoreCase(Manufacturer))
              
          {
              System.out.println("M" + carDetails.getMfgCompany()); 
              Object[] row = (Object[]) return_row(carDetails);
//            row[5]=
           
              model.addRow(row);
            
          }
          
      }
      
       String user_mfgName=txtmfgName.getText();
       System.out.println("Model Name" + user_mfgName);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getmfgName().equalsIgnoreCase(user_mfgName))
              
          {
              System.out.println("M" + carDetails.getmfgName()); 
              Object[] row = (Object[]) return_row(carDetails);
//            row[5]=
           
              model.addRow(row);
          }
      }
      
      String user_Location=txtLocation.getText();
       System.out.println("Location" + user_Location);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getLocation().equalsIgnoreCase(user_Location))
              
          {
              System.out.println("M" + carDetails.getLocation()); 
              Object[] row = (Object[]) return_row(carDetails);

              model.addRow(row);
          }
      }
      
      String user_Year=txtmfgYear.getText();
       System.out.println("Manufactured Year:" + user_Year);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getYearOfManufacturing().equalsIgnoreCase(user_Year))
              
          {
              System.out.println("M" + carDetails.getYearOfManufacturing()); 
              Object[] row = (Object[]) return_row(carDetails);
           
              model.addRow(row);
          }
      }
      
      String user_serialNum=txtserialNum.getText();
       System.out.println("The Serial Number is" + user_serialNum);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getSerialNum().equalsIgnoreCase(user_serialNum))
              
          {
              System.out.println("M" + carDetails.getSerialNum()); 
              Object[] row = (Object[]) return_row(carDetails);

              model.addRow(row);
          }
      }
      
      
       String user_modelNum=txtmodelNum.getText();
       System.out.println("Model Number" + user_modelNum);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getModelNum().equalsIgnoreCase(user_modelNum))
              
          {
              System.out.println("M" + carDetails.getModelNum()); 
              Object[] row = (Object[]) return_row(carDetails);

              model.addRow(row);
          }
      }
      
      
        String user_vIDNum=txtvIDNum.getText();
       System.out.println("Vehicle Number" + user_vIDNum);
      for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
          
          if(carDetails.getvIDNum().equalsIgnoreCase(user_vIDNum))
              
          {
              System.out.println("M" + carDetails.getvIDNum()); 
              Object[] row = (Object[]) return_row(carDetails);

              model.addRow(row);
          }
      }
      
      
    }//GEN-LAST:event_btnsearchActionPerformed

    private void jComboNumSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboNumSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboNumSeatsActionPerformed

    private void txtFleetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFleetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFleetActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFleet;
    private javax.swing.JRadioButton btnRfirstAvailavility;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> jComboNumSeats;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarAvailability2;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYearOfManufacturing1;
    private javax.swing.JLabel lblfirstAvailabilty;
    private javax.swing.JLabel lblmainCert;
    private javax.swing.JLabel lblmfgCompany;
    private javax.swing.JLabel lblmfgName;
    private javax.swing.JLabel lblmfgYear;
    private javax.swing.JLabel lblmodelNum;
    private javax.swing.JLabel lblserialNum;
    private javax.swing.JLabel lblvidNum;
    private javax.swing.JRadioButton noChecked;
    private javax.swing.JTable tblCarDetails;
    private javax.swing.JTextField txtFleet;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtmainCert;
    private javax.swing.JTextField txtmfgCompany;
    private javax.swing.JTextField txtmfgName;
    private javax.swing.JTextField txtmfgYear;
    private javax.swing.JTextField txtmodelNum;
    private javax.swing.JTextField txtserialNum;
    private javax.swing.JTextField txtvIDNum;
    private javax.swing.JRadioButton yesChecked;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblCarDetails.getModel();
        model.setRowCount(0);
        
        for (Vehicle carDetails : carDetailsHistory.getCarDetailsHistory()){
            
            Object[] row = new Object[10];
            row[0]= carDetails.getMfgCompany();
            row[1]= carDetails.getmfgName();
            row[2]= carDetails.getYearOfManufacturing();
            row[6]= carDetails.getLocation();
            row[8]= carDetails.getNumSeats();
            row[9]= carDetails.getCarAvailability();
            row[0]= carDetails;
            row[4]= carDetails.getSerialNum();
            row[3]= carDetails.getModelNum();
            row[5]= carDetails.getvIDNum();
           // row[7]= carDetails.getmainCert();
           
            model.addRow(row);
            
        }
    }
}
